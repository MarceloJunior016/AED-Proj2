{
  "C_Cpp_Runner.cCompilerPath": "/usr/bin/gcc", // Caminho para o GCC no Linux
  "C_Cpp_Runner.cppCompilerPath": "/usr/bin/g++", // Caminho para o G++ no Linux
  "C_Cpp_Runner.debuggerPath": "/usr/bin/gdb", // Caminho para o GDB no Linux
  "C_Cpp_Runner.cStandard": "c11", // Padrão C a ser utilizado
  "C_Cpp_Runner.cppStandard": "c++17", // Padrão C++ a ser utilizado
  "C_Cpp_Runner.useMsvc": false, // Não usar MSVC no Linux
  "C_Cpp_Runner.warnings": [
    "-Wall",
    "-Wextra",
    "-Wpedantic",
    "-Wshadow",
    "-Wformat=2",
    "-Wcast-align",
    "-Wconversion",
    "-Wsign-conversion",
    "-Wnull-dereference"
  ],
  "C_Cpp_Runner.enableWarnings": true, // Habilitar warnings
  "C_Cpp_Runner.warningsAsError": false, // Não tratar warnings como erros
  "C_Cpp_Runner.compilerArgs": [],
  "C_Cpp_Runner.linkerArgs": [],
  "C_Cpp_Runner.includePaths": [
    "${workspaceFolder}/**", // Caminhos de inclusão do workspace
    "/usr/include", // Diretório padrão para includes no Linux
    "/usr/local/include"
  ],
  "C_Cpp_Runner.includeSearch": [
    "*",
    "**/*"
  ],
  "C_Cpp_Runner.excludeSearch": [
    "**/build",
    "**/build/**",
    "**/.*",
    "**/.*/**",
    "**/.vscode",
    "**/.vscode/**"
  ],
  "C_Cpp_Runner.useAddressSanitizer": false, // Pode habilitar sanitizadores se necessário
  "C_Cpp_Runner.useUndefinedSanitizer": false,
  "C_Cpp_Runner.useLeakSanitizer": false,
  "C_Cpp_Runner.showCompilationTime": false,
  "C_Cpp_Runner.useLinkTimeOptimization": false,
  "files.associations": {
    "graph.h": "c"
  }
}
